using System;


    class heap
    {
        int[] r = { 2, 5, 7, 9, 32, 42, 12, 21, 3, 8 };
        public void hsort()
        {
            int i, t;
            for (i=5;i>=0;i--) 
            {
                adjust(i, 9);
            }
            for (i = 0; i >= 0; i--)
            {
                t = r[i + 1];
                r[i + 1] = r[0];
                r[0] = t;
                adjust(0, i);
            }
        }
        private void adjust(int i, int n) 
        {
            int t, j;
            try
            {
                t = r[i];
                j = 2 + i;
                while(j<=n)
                {
                    if (j < n && r[j] < r[j + 1])
                        j++;
                    if (t >= r[j])
                        break;
                    r[j / 2] = r[j];
                    j *= 2;
                }
                r[j / 2] = t;
            }
            catch(IndexOutOfRangeException e)
            {
                Console.WriteLine("Array out of Bound",e);
            }
        }
        public void print() 
        {
           for(int i=0;i<10;i++)
            {
            Console.WriteLine("{0}", r[i]);
            }
        }
        public static void Main() 
        {
        heap obj = new heap();
        Console.WriteLine("Elementos  antes del sorting: ");
        obj.print();
        obj.hsort();
        Console.WriteLine("Elementos despues del sorting: ");
        obj.print();
        Console.ReadKey();
        }
    }



otro heapsort

using System;

namespace HeapSortDemo
{
    public class example
    {
        static void heapSort(int[] arr, int n)
        {
            for (int i = n / 2 - 1; i >= 0; i--)
                heapify(arr, n, i);
            for (int i = n - 1; i >= 0; i--)
            {
                int temp = arr[0];
                arr[0] = arr[i];
                arr[i] = temp;
                heapify(arr, i, 0);
            }
        }
        static void heapify(int[] arr, int n, int i)
        {
            int largest = i;
            int left = 2 * i + 1;
            int right = 2 * i + 2;
            if (left < n && arr[left] > arr[largest])
                largest = left;
            if (right < n && arr[right] > arr[largest])
                largest = right;
            if (largest != i)
            {
                int swap = arr[i];
                arr[i] = arr[largest];
                arr[largest] = swap;
                heapify(arr, n, largest);
            }
        }
        public static void Main()
        {
            int[] arr = { 55, 25, 89, 34, 12, 19, 78, 95, 1, 100, 23215, 65, 12, 3, 1, 2, 1, 2 };
            int n = arr.Length, i;
            Console.WriteLine("Heap Sort");
            Console.Write("Initial array is: ");
            for (i = 0; i < n; i++)
            {
                Console.Write(arr[i] + " ");
            }
            heapSort(arr, n);
            Console.Write("\nSorted Array is: ");
            for (i = 0; i < n; i++)
            {
                Console.Write(arr[i] + " ");
            }
            Console.ReadKey();
        }
    }
}





